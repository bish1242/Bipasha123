import numpy as np
from scipy import ndimage
import matplotlib.pyplot as plt
import imageio.v2 as imageio  # Use imageio.v2 for compatibility

# Load your own image in grayscale
image_path = 'ggv.jpg'  # Replace with your actual image path
im = imageio.imread(image_path, mode='F')  # 'F' mode loads image as float grayscale

# Normalize the image to 0â€“1
im = im / np.max(im)

# Add synthetic noise
im_noise = im + 0.2 * np.random.randn(*im.shape)

# Apply median filter
im_med = ndimage.median_filter(im_noise, 3)

# Plot results
plt.figure(figsize=(16, 5))

plt.subplot(141)
plt.imshow(im, cmap='gray', interpolation='nearest')
plt.axis('off')
plt.title('Original image', fontsize=20)

plt.subplot(142)
plt.imshow(im_noise, cmap='gray', interpolation='nearest', vmin=0, vmax=1)
plt.axis('off')
plt.title('Noisy image', fontsize=20)

plt.subplot(143)
plt.imshow(im_med, cmap='gray', interpolation='nearest', vmin=0, vmax=1)
plt.axis('off')
plt.title('Median filter', fontsize=20)

plt.subplot(144)
plt.imshow(np.abs(im - im_med), cmap=plt.cm.hot, interpolation='nearest')
plt.axis('off')
plt.title('Error', fontsize=20)

plt.subplots_adjust(wspace=0.02, hspace=0.02, top=0.9, bottom=0, left=0,
                    right=1)
plt.show()
